{"version":3,"sources":["components/Card.js","components/Header.js","components/Footer.js","components/Login.js","components/Modal.js","components/App.js","serviceWorker.js","index.js"],"names":["Card","props","react_default","a","createElement","className","src","logo","alt","city","nickname","Header","onClick","open","go","Footer","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","action","id","htmlFor","type","name","value","form","Component","Modal","closeModal","components_Login","App","loginClick","setState","login","data","_this2","fetch","then","res","json","teamCards","map","item","components_Card","fullName","components_Header","components_Modal","close","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2645016b.chunk.js","sourcesContent":["import React from 'react'\nimport '../styles/card.css'\n\nconst Card = props => {\n  return (\n    <div className=\"ui card\">\n      <div className=\"image\">\n        <img className=\" logo\" src={props.logo} alt=\"team logo\" />\n      </div>\n      <div className=\"content\">\n        <a className=\"header\">{props.city}</a>\n        <div className=\"meta\">\n          <span className=\"nickname\">{props.nickname}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport '../styles/header.css'\nimport '../styles/button.css'\nimport { GoPerson } from 'react-icons/go'\n\nconst Header = props => {\n  return (\n    <div className=\"headerContainer\">\n      <h1 className=\"headerText\">FingerRoll</h1>\n      <button onClick={props.open} className=\"loginButton\">\n        <GoPerson className=\"loginIcon\" />\n        Login/Signup\n      </button>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport '../styles/footer.css'\n\nconst Footer = () => {\n  return (\n    <div className=\"footerContainer\">\n      <h1 className=\"footerText\">&copy; chris pfaff</h1>\n    </div>\n  )\n}\n\nexport default Footer\n","import React, { Component } from 'react'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n  render() {\n    return (\n      <div className=\"Login\">\n        <h3>Login/SignUp</h3>\n        <form action=\"api/login\" id=\"loginForm\">\n          <label htmlFor=\"username\">Username</label>\n          <input type=\"text\" name=\"username\" />\n          <select name=\"teams\" id=\"teamName\">\n            <option value=\"Atlanta Hawks\">Atlanta Hawks</option>\n            <option value=\"Boston Celtics\">Boston Celtics</option>\n            <option value=\"Brooklyn Nets\">Brooklyn Nets</option>\n            <option value=\"Charlotte Hornets\">Charlotte Hornets</option>\n            <option value=\"Chicago Bulls\">Chicago Bulls</option>\n            <option value=\"Cleveland Cavaliers\">Cleveland Cavaliers</option>\n            <option value=\"Dallas Mavericks\">Dallas Mavericks</option>\n            <option value=\"Denver Nuggets\">Denver Nuggets</option>\n            <option value=\"Detroit Pistons\">Detroit Pistons</option>\n            <option value=\"Golden State Warriors\">Golden State Warriors</option>\n            <option value=\"Houston Rockets\">Houston Rockets</option>\n            <option value=\"Indiana Pacers\">Indiana Pacers</option>\n            <option value=\"Los Angeles Clippers\">Los Angeles Clippers</option>\n            <option value=\"Los Angeles Lakers\">Los Angeles Lakers</option>\n            <option value=\"Memphis Grizzlies\">Memphis Grizzlies</option>\n            <option value=\"Miami Heat\">Miami Heat</option>\n            <option value=\"Milwaukee Bucks\">Milwaukee Bucks</option>\n            <option value=\"Minnesota Timberwolves\">\n              Minnesota Timberwolves\n            </option>\n            <option value=\"New Orleans Pelicans\">New Orleans Pelicans</option>\n            <option value=\"New York Knicks\">New York Knicks</option>\n            <option value=\"Oklahoma City Thunder\">Oklahoma City Thunder</option>\n            <option value=\"Orlando Magic\">Orlando Magic</option>\n            <option value=\"Philadelphia 76ers\">Philadelphia 76ers</option>\n            <option value=\"Phoenix Suns\">Phoenix Suns</option>\n            <option value=\"Portland Trail Blazers\">\n              Portland Trail Blazers\n            </option>\n            <option value=\"Sacramento Kings\">Sacramento Kings</option>\n            <option value=\"San Antonio Spurs\">San Antonio Spurs</option>\n            <option value=\"Toronto Raptors\">Toronto Raptors</option>\n            <option value=\"Utah Jazz\">Utah Jazz</option>\n            <option value=\"Washington Wizards\">Washington Wizards</option>\n          </select>\n          <br />\n          <label htmlFor=\"password\">password</label>\n          <input type=\"password\" name=\"password\" id=\"\" />\n        </form>\n        <button type=\"submit\" value=\"submit\" form=\"loginForm\">\n          Login/Signup\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default Login\n","import React, { Component } from 'react'\n\nimport '../styles/modal.css'\nimport Login from './Login'\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    const { closeModal } = this.props\n    return (\n      <div className=\"ModalContainer\">\n        <Login />\n        <button className=\"loginButton\" onClick={closeModal}>\n          Close Modal\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default Modal\n","import React, { Component } from 'react'\n\nimport Card from './Card'\nimport Header from './Header'\nimport Footer from './Footer'\n//import Login from './Login'\n\nimport '../styles/app.css'\nimport Modal from './Modal'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: [],\n      login: false\n    }\n  }\n  componentDidMount() {\n    fetch('/api/landing')\n      .then(res => {\n        return res.json()\n      })\n      .then(data => {\n        this.setState({ data: data })\n      })\n  }\n\n  loginClick = () => {\n    this.setState({ login: !this.state.login })\n  }\n\n  render() {\n    const { login } = this.state\n    const teamCards = this.state.data.map(item => {\n      return (\n        <Card\n          fullName={item.fullName}\n          city={item.city}\n          nickname={item.nickname}\n          logo={item.logo}\n        />\n      )\n    })\n    return (\n      <div>\n        <Header open={this.loginClick} />\n        {login ? <Modal close={this.loginClick} /> : ''}\n        <div className=\"mainContainer\">{teamCards}</div>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}